import { auth, db, storage } from "@/firebase";
import useAuth from "@/hooks/useAuth";
import { updateProfile } from "firebase/auth";
import { addDoc, collection } from "firebase/firestore";
import { getDownloadURL, getStorage, ref, uploadBytes } from "firebase/storage";
import Head from "next/head";
import Image from "next/image";
import loginImg from "../public/login.jpg";
import { useRouter } from "next/router";
import { useState } from "react";
import { SubmitHandler, useForm } from "react-hook-form";

type Inputs = {
  displayName: string;
  profilePic: FileList;
};

export default function SetUser() {
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<Inputs>();
  const router = useRouter();
  const { user, addUsername } = useAuth();
  const [fileSizeError, setFileSizeError] = useState<string | undefined>();
  const onSubmit: SubmitHandler<Inputs> = async ({
    displayName,
    profilePic,
  }) => {
    const fileRef = ref(storage, user?.uid + ".webp");
    const snapshot = await uploadBytes(fileRef, profilePic[0]);
    const photoURL = await getDownloadURL(fileRef);

    updateProfile(user!, { photoURL });

    await addDoc(collection(db, "users"), {
      uid: user?.uid,
      email: user?.email,
      projects: 0,
      profilePic: photoURL,
      username: displayName,
    });
    addUsername(displayName);
    router.push("/");
  };

  const validateFileSize = (value: FileList) => {
    const file = value[0];
    if (file && file.size > 1000000) {
      setFileSizeError("File size should be less than 1mb");
      return false;
    } else {
      setFileSizeError(undefined);
      return true;
    }
  };

  if (user?.displayName !== null) {
    router.push("/");
  }
  return (
    <>
      <Head>
        <title>NiceJob</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className=" min-h-screen min-w-screen px-[5vw] md:px-0 grid place-content-center">
        <form
          className="max-w-[700px]  shadow-lg p-4  w-full md:mx-auto "
          onSubmit={handleSubmit(onSubmit)}
        >
          <Image
            src={loginImg}
            alt="login image"
            className="rounded-md mb-4 object-cover w-full"
          />
          <div className="space-y-3 flex flex-col w-full ">
            <>
              <h1 className="text-xl font-semibold text-center">
                Now let's set up your profile!
              </h1>
              <input
                className="basic-input"
                type="text"
                required
                placeholder="Username"
                {...register("displayName")}
              />
              <label htmlFor="profilePic">
                Profile Picture, maxium size 1mb
              </label>
              <input
                id="profilePic"
                accept=".png, .svg, .jpg"
                className="basic-input w-full"
                type="file"
                required
                {...register("profilePic", {
                  validate: validateFileSize,
                })}
              />
              {fileSizeError && alert(fileSizeError)}
              <button type="submit" className="btn-primary">
                Submit
              </button>
            </>
          </div>
        </form>
      </main>
    </>
  );
}
